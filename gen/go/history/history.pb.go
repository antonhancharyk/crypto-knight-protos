// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: history.proto

package history

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InputKline struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	Id                       int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Symbol                   string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	OpenTime                 int64                  `protobuf:"varint,3,opt,name=open_time,json=openTime,proto3" json:"open_time,omitempty"`
	OpenPrice                float64                `protobuf:"fixed64,4,opt,name=open_price,json=openPrice,proto3" json:"open_price,omitempty"`
	HighPrice                float64                `protobuf:"fixed64,5,opt,name=high_price,json=highPrice,proto3" json:"high_price,omitempty"`
	LowPrice                 float64                `protobuf:"fixed64,6,opt,name=low_price,json=lowPrice,proto3" json:"low_price,omitempty"`
	ClosePrice               float64                `protobuf:"fixed64,7,opt,name=close_price,json=closePrice,proto3" json:"close_price,omitempty"`
	Volume                   float64                `protobuf:"fixed64,8,opt,name=volume,proto3" json:"volume,omitempty"`
	CloseTime                int64                  `protobuf:"varint,9,opt,name=close_time,json=closeTime,proto3" json:"close_time,omitempty"`
	QuoteAssetVolume         float64                `protobuf:"fixed64,10,opt,name=quote_asset_volume,json=quoteAssetVolume,proto3" json:"quote_asset_volume,omitempty"`
	NumTrades                int64                  `protobuf:"varint,11,opt,name=num_trades,json=numTrades,proto3" json:"num_trades,omitempty"`
	TakerBuyBaseAssetVolume  float64                `protobuf:"fixed64,12,opt,name=taker_buy_base_asset_volume,json=takerBuyBaseAssetVolume,proto3" json:"taker_buy_base_asset_volume,omitempty"`
	TakerBuyQuoteAssetVolume float64                `protobuf:"fixed64,13,opt,name=taker_buy_quote_asset_volume,json=takerBuyQuoteAssetVolume,proto3" json:"taker_buy_quote_asset_volume,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *InputKline) Reset() {
	*x = InputKline{}
	mi := &file_history_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InputKline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputKline) ProtoMessage() {}

func (x *InputKline) ProtoReflect() protoreflect.Message {
	mi := &file_history_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputKline.ProtoReflect.Descriptor instead.
func (*InputKline) Descriptor() ([]byte, []int) {
	return file_history_proto_rawDescGZIP(), []int{0}
}

func (x *InputKline) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InputKline) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *InputKline) GetOpenTime() int64 {
	if x != nil {
		return x.OpenTime
	}
	return 0
}

func (x *InputKline) GetOpenPrice() float64 {
	if x != nil {
		return x.OpenPrice
	}
	return 0
}

func (x *InputKline) GetHighPrice() float64 {
	if x != nil {
		return x.HighPrice
	}
	return 0
}

func (x *InputKline) GetLowPrice() float64 {
	if x != nil {
		return x.LowPrice
	}
	return 0
}

func (x *InputKline) GetClosePrice() float64 {
	if x != nil {
		return x.ClosePrice
	}
	return 0
}

func (x *InputKline) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *InputKline) GetCloseTime() int64 {
	if x != nil {
		return x.CloseTime
	}
	return 0
}

func (x *InputKline) GetQuoteAssetVolume() float64 {
	if x != nil {
		return x.QuoteAssetVolume
	}
	return 0
}

func (x *InputKline) GetNumTrades() int64 {
	if x != nil {
		return x.NumTrades
	}
	return 0
}

func (x *InputKline) GetTakerBuyBaseAssetVolume() float64 {
	if x != nil {
		return x.TakerBuyBaseAssetVolume
	}
	return 0
}

func (x *InputKline) GetTakerBuyQuoteAssetVolume() float64 {
	if x != nil {
		return x.TakerBuyQuoteAssetVolume
	}
	return 0
}

type ProcessHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Klines        []*InputKline          `protobuf:"bytes,1,rep,name=klines,proto3" json:"klines,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessHistoryRequest) Reset() {
	*x = ProcessHistoryRequest{}
	mi := &file_history_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessHistoryRequest) ProtoMessage() {}

func (x *ProcessHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_history_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessHistoryRequest.ProtoReflect.Descriptor instead.
func (*ProcessHistoryRequest) Descriptor() ([]byte, []int) {
	return file_history_proto_rawDescGZIP(), []int{1}
}

func (x *ProcessHistoryRequest) GetKlines() []*InputKline {
	if x != nil {
		return x.Klines
	}
	return nil
}

type ProcessHistoryResponse struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	Symbol                    string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	AmountPositivePercentages float64                `protobuf:"fixed64,2,opt,name=amount_positive_percentages,json=amountPositivePercentages,proto3" json:"amount_positive_percentages,omitempty"`
	AmountNegativePercentages float64                `protobuf:"fixed64,3,opt,name=amount_negative_percentages,json=amountNegativePercentages,proto3" json:"amount_negative_percentages,omitempty"`
	QuantityStopMarkets       float64                `protobuf:"fixed64,4,opt,name=quantity_stop_markets,json=quantityStopMarkets,proto3" json:"quantity_stop_markets,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ProcessHistoryResponse) Reset() {
	*x = ProcessHistoryResponse{}
	mi := &file_history_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessHistoryResponse) ProtoMessage() {}

func (x *ProcessHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_history_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessHistoryResponse.ProtoReflect.Descriptor instead.
func (*ProcessHistoryResponse) Descriptor() ([]byte, []int) {
	return file_history_proto_rawDescGZIP(), []int{2}
}

func (x *ProcessHistoryResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ProcessHistoryResponse) GetAmountPositivePercentages() float64 {
	if x != nil {
		return x.AmountPositivePercentages
	}
	return 0
}

func (x *ProcessHistoryResponse) GetAmountNegativePercentages() float64 {
	if x != nil {
		return x.AmountNegativePercentages
	}
	return 0
}

func (x *ProcessHistoryResponse) GetQuantityStopMarkets() float64 {
	if x != nil {
		return x.QuantityStopMarkets
	}
	return 0
}

var File_history_proto protoreflect.FileDescriptor

const file_history_proto_rawDesc = "" +
	"\n" +
	"\rhistory.proto\x12\ahistory\"\xcf\x03\n" +
	"\n" +
	"InputKline\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12\x1b\n" +
	"\topen_time\x18\x03 \x01(\x03R\bopenTime\x12\x1d\n" +
	"\n" +
	"open_price\x18\x04 \x01(\x01R\topenPrice\x12\x1d\n" +
	"\n" +
	"high_price\x18\x05 \x01(\x01R\thighPrice\x12\x1b\n" +
	"\tlow_price\x18\x06 \x01(\x01R\blowPrice\x12\x1f\n" +
	"\vclose_price\x18\a \x01(\x01R\n" +
	"closePrice\x12\x16\n" +
	"\x06volume\x18\b \x01(\x01R\x06volume\x12\x1d\n" +
	"\n" +
	"close_time\x18\t \x01(\x03R\tcloseTime\x12,\n" +
	"\x12quote_asset_volume\x18\n" +
	" \x01(\x01R\x10quoteAssetVolume\x12\x1d\n" +
	"\n" +
	"num_trades\x18\v \x01(\x03R\tnumTrades\x12<\n" +
	"\x1btaker_buy_base_asset_volume\x18\f \x01(\x01R\x17takerBuyBaseAssetVolume\x12>\n" +
	"\x1ctaker_buy_quote_asset_volume\x18\r \x01(\x01R\x18takerBuyQuoteAssetVolume\"D\n" +
	"\x15ProcessHistoryRequest\x12+\n" +
	"\x06klines\x18\x01 \x03(\v2\x13.history.InputKlineR\x06klines\"\xe4\x01\n" +
	"\x16ProcessHistoryResponse\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12>\n" +
	"\x1bamount_positive_percentages\x18\x02 \x01(\x01R\x19amountPositivePercentages\x12>\n" +
	"\x1bamount_negative_percentages\x18\x03 \x01(\x01R\x19amountNegativePercentages\x122\n" +
	"\x15quantity_stop_markets\x18\x04 \x01(\x01R\x13quantityStopMarkets2c\n" +
	"\x0eHistoryService\x12Q\n" +
	"\x0eProcessHistory\x12\x1e.history.ProcessHistoryRequest\x1a\x1f.history.ProcessHistoryResponseB@Z>github.com/antongoncharik/crypto-knight-protos/protos/history;b\x06proto3"

var (
	file_history_proto_rawDescOnce sync.Once
	file_history_proto_rawDescData []byte
)

func file_history_proto_rawDescGZIP() []byte {
	file_history_proto_rawDescOnce.Do(func() {
		file_history_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_history_proto_rawDesc), len(file_history_proto_rawDesc)))
	})
	return file_history_proto_rawDescData
}

var file_history_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_history_proto_goTypes = []any{
	(*InputKline)(nil),             // 0: history.InputKline
	(*ProcessHistoryRequest)(nil),  // 1: history.ProcessHistoryRequest
	(*ProcessHistoryResponse)(nil), // 2: history.ProcessHistoryResponse
}
var file_history_proto_depIdxs = []int32{
	0, // 0: history.ProcessHistoryRequest.klines:type_name -> history.InputKline
	1, // 1: history.HistoryService.ProcessHistory:input_type -> history.ProcessHistoryRequest
	2, // 2: history.HistoryService.ProcessHistory:output_type -> history.ProcessHistoryResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_history_proto_init() }
func file_history_proto_init() {
	if File_history_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_history_proto_rawDesc), len(file_history_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_history_proto_goTypes,
		DependencyIndexes: file_history_proto_depIdxs,
		MessageInfos:      file_history_proto_msgTypes,
	}.Build()
	File_history_proto = out.File
	file_history_proto_goTypes = nil
	file_history_proto_depIdxs = nil
}
